/*!
 * gulp-nunjucks-sass-template
 * A Gulp 4 template including SCSS, Nunjucks, JS and more
 *
 * Url: https://github.com/DefaultSimon
 * Author: Simon Goričar
 * Copyright 2021. License: MIT
 */
window.onload=(()=>{"use strict";if(document.querySelector(".section--step")){const e=new Vivus("menu_designs",{duration:300,animTimingFunction:Vivus.EASE,onReady:()=>{!function t(){setTimeout(()=>{e.stop().reset().play(1,t())},6e3)}()}});const t=new Vivus("menu_projects",{type:"scenario-sync",animTimingFunction:Vivus.EASE,onReady:()=>{!function e(){setTimeout(()=>{t.stop().reset().play(1,e())},7e3)}()}});const n=new Vivus("map",{type:"scenario",animTimingFunction:Vivus.EASE,onReady:()=>{!function e(){setTimeout(()=>{n.stop().reset().play(1,e())},1e4)}()}})}if(document.querySelector(".paginator")){let t=document.querySelectorAll(".paginator .paginator_link"),n=document.querySelectorAll(".section");function e(e,o){n.forEach((n,i)=>{n.getBoundingClientRect().y+e<e+o/2?n.getBoundingClientRect().y+n.getBoundingClientRect().height+e>e+o/2?t[i].classList.add("current","active"):(t[i].classList.add("active"),t[i].classList.remove("current")):(t[i].classList.contains("active")&&t[i].classList.remove("active"),t[i].classList.contains("current")&&t[i].classList.remove("current"))})}e(window.scrollY,window.innerHeight),window.onscroll=(()=>{e(window.scrollY,window.innerHeight)})}const t=e=>"7"===e?"7 (":"8"===e?"8 (":"9"===e?"7 (9":"7 (";document.querySelectorAll("input").forEach(e=>{e.addEventListener("input",n=>{const o=e.value.replace(/\D+/g,"");let i;i=e.value.includes("+8")||"8"===e.value[0]?"":"+";for(let e=0;e<o.length&&e<11;e++){switch(e){case 0:i+=t(o[e]);continue;case 4:i+=") ";break;case 7:case 9:i+="-"}i+=o[e]}e.value=i})});const n=document.querySelector(".header_button"),o=document.querySelector(".header_mobile ul");if(n.onclick=(()=>{o.classList.toggle("show")}),document.querySelector(".portfolio")){document.querySelectorAll(".portfolio_tag").forEach(e=>{e.onclick=(()=>{e.classList.toggle("active")})})}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
