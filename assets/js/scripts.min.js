/*!
 * gulp-nunjucks-sass-template
 * A Gulp 4 template including SCSS, Nunjucks, JS and more
 *
 * Url: https://github.com/DefaultSimon
 * Author: Simon Goričar
 * Copyright 2021. License: MIT
 */
window.onload=(()=>{"use strict";const e=new Vivus("menu_designs",{duration:300,animTimingFunction:Vivus.EASE,onReady:()=>{!function t(){setTimeout(()=>{e.stop().reset().play(1,t())},6e3)}()}});const t=new Vivus("menu_projects",{type:"scenario-sync",animTimingFunction:Vivus.EASE,onReady:()=>{!function e(){setTimeout(()=>{t.stop().reset().play(1,e())},7e3)}()}});const n=new Vivus("map",{type:"scenario",animTimingFunction:Vivus.EASE,onReady:()=>{!function e(){setTimeout(()=>{n.stop().reset().play(1,e())},1e4)}()}});if(document.querySelector(".paginator")){let e=document.querySelectorAll(".paginator .paginator_link"),t=document.querySelectorAll(".section");function i(n,i){t.forEach((t,o)=>{t.getBoundingClientRect().y+n<n+i/2?t.getBoundingClientRect().y+t.getBoundingClientRect().height+n>n+i/2?e[o].classList.add("current","active"):(e[o].classList.add("active"),e[o].classList.remove("current")):(e[o].classList.contains("active")&&e[o].classList.remove("active"),e[o].classList.contains("current")&&e[o].classList.remove("current"))})}i(window.scrollY,window.innerHeight),window.onscroll=(()=>{i(window.scrollY,window.innerHeight)})}const o=e=>"7"===e?"7 (":"8"===e?"8 (":"9"===e?"7 (9":"7 (";document.querySelectorAll("input").forEach(e=>{e.addEventListener("input",t=>{const n=e.value.replace(/\D+/g,"");let i;i=e.value.includes("+8")||"8"===e.value[0]?"":"+";for(let e=0;e<n.length&&e<11;e++){switch(e){case 0:i+=o(n[e]);continue;case 4:i+=") ";break;case 7:case 9:i+="-"}i+=n[e]}e.value=i})});const c=document.querySelector(".header_button"),s=document.querySelector(".header_mobile ul");c.onclick=(()=>{s.classList.toggle("show")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
